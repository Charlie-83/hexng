pub enum BlockTypes {
  Reserved = 0x00000000,
  InterfaceDescriptionBlock = 0x00000001,
  PacketBlock = 0x00000002,
  SimplePacketBlock = 0x00000003,
  NameResolutionBlock = 0x00000004,
  InterfaceStatisticsBlock = 0x00000005,
  EnhancedPacketBlock = 0x00000006,
  IrigTimestampBlock = 0x00000007,
  Arinc429Block = 0x00000008,
  SystemdJournalExportBlock = 0x00000009,
  DecryptionSecretsBlock = 0x0000000a,
  HoneProjectMachineInfoBlock = 0x00000101,
  HoneProjectConnectionEventBlock = 0x00000102,
  SysdigMachineInfoBlock = 0x00000201,
  SysdigProcessInfoBlock = 0x00000202,
  SysdigFdListBlock = 0x00000203,
  SysdigEventBlock = 0x00000204,
  SysdigInterfaceListBlock = 0x00000205,
  SysdigUserListBlock = 0x00000206,
  SysdigProcessInfoBlockV2 = 0x00000207,
  SysdigEventBlockWithFlags = 0x00000208,
  SysdigProcessInfoBlockV3 = 0x00000209,
  SysdigProcessInfoBlockV4 = 0x00000210,
  SysdigProcessInfoBlockV5 = 0x00000211,
  SysdigProcessInfoBlockV6 = 0x00000212,
  SysdigProcessInfoBlockV7 = 0x00000213,
  CustomBlockRewritersCanCopy = 0x00000BAD,
  CustomBlockRewritersShouldNotCopy = 0x40000BAD,
  SectionHeaderBlock = 0x0A0D0D0A,
  Unknown,
}

pub fn block_type_str(block_type: &BlockTypes) -> String {
  match block_type {
    BlockTypes::InterfaceDescriptionBlock => "Interface Description Block".to_owned(),
    BlockTypes::PacketBlock => "Packet Block".to_owned(),
    BlockTypes::SimplePacketBlock => "Simple Packet Block".to_owned(),
    BlockTypes::NameResolutionBlock => "Name Resolution Block".to_owned(),
    BlockTypes::InterfaceStatisticsBlock => "Interface Statistics Block".to_owned(),
    BlockTypes::EnhancedPacketBlock => "Enhanced Packet Block".to_owned(),
    BlockTypes::IrigTimestampBlock => "IRIG Timestamp/Socket Aggregation Event Block".to_owned(),
    BlockTypes::Arinc429Block => "AFDX Encapsulation Information Block".to_owned(),
    BlockTypes::SystemdJournalExportBlock => "systemd Journal Export Block".to_owned(),
    BlockTypes::DecryptionSecretsBlock => "Decryption Secrets Block".to_owned(),
    BlockTypes::HoneProjectMachineInfoBlock => "Hone Project Machine Info Block".to_owned(),
    BlockTypes::HoneProjectConnectionEventBlock => "Hone Project Connection Event Block".to_owned(),
    BlockTypes::SysdigMachineInfoBlock => "Sysdig Machine Info Block".to_owned(),
    BlockTypes::SysdigProcessInfoBlock => "Sysdig Process Info Block, version 1".to_owned(),
    BlockTypes::SysdigFdListBlock => "Sysdig FD List Block".to_owned(),
    BlockTypes::SysdigEventBlock => "Sysdig Event Block".to_owned(),
    BlockTypes::SysdigInterfaceListBlock => "Sysdig Interface List Block".to_owned(),
    BlockTypes::SysdigUserListBlock => "Sysdig User List Block".to_owned(),
    BlockTypes::SysdigProcessInfoBlockV2 => "Sysdig Process Info Block, version 2".to_owned(),
    BlockTypes::SysdigEventBlockWithFlags => "Sysdig Event Block with flags".to_owned(),
    BlockTypes::SysdigProcessInfoBlockV3 => "Sysdig Process Info Block, version 3".to_owned(),
    BlockTypes::SysdigProcessInfoBlockV4 => "Sysdig Process Info Block, version 4".to_owned(),
    BlockTypes::SysdigProcessInfoBlockV5 => "Sysdig Process Info Block, version 5".to_owned(),
    BlockTypes::SysdigProcessInfoBlockV6 => "Sysdig Process Info Block, version 6".to_owned(),
    BlockTypes::SysdigProcessInfoBlockV7 => "Sysdig Process Info Block, version 7".to_owned(),
    BlockTypes::CustomBlockRewritersCanCopy => {
      "Custom Block that rewriters can copy into new files".to_owned()
    }
    BlockTypes::CustomBlockRewritersShouldNotCopy => {
      "Custom Block that rewriters should not copy into new files".to_owned()
    }
    BlockTypes::SectionHeaderBlock => "Section Header Block".to_owned(),
    _ => "Unknown".to_owned(),
  }
}

impl From<u32> for BlockTypes {
  fn from(n: u32) -> Self {
    match n {
      0x00000000 => BlockTypes::Reserved,
      0x00000001 => BlockTypes::InterfaceDescriptionBlock,
      0x00000002 => BlockTypes::PacketBlock,
      0x00000003 => BlockTypes::SimplePacketBlock,
      0x00000004 => BlockTypes::NameResolutionBlock,
      0x00000005 => BlockTypes::InterfaceStatisticsBlock,
      0x00000006 => BlockTypes::EnhancedPacketBlock,
      0x00000007 => BlockTypes::IrigTimestampBlock,
      0x00000008 => BlockTypes::Arinc429Block,
      0x00000009 => BlockTypes::SystemdJournalExportBlock,
      0x0000000a => BlockTypes::DecryptionSecretsBlock,
      0x00000101 => BlockTypes::HoneProjectMachineInfoBlock,
      0x00000102 => BlockTypes::HoneProjectConnectionEventBlock,
      0x00000201 => BlockTypes::SysdigMachineInfoBlock,
      0x00000202 => BlockTypes::SysdigProcessInfoBlock,
      0x00000203 => BlockTypes::SysdigFdListBlock,
      0x00000204 => BlockTypes::SysdigEventBlock,
      0x00000205 => BlockTypes::SysdigInterfaceListBlock,
      0x00000206 => BlockTypes::SysdigUserListBlock,
      0x00000207 => BlockTypes::SysdigProcessInfoBlockV2,
      0x00000208 => BlockTypes::SysdigEventBlockWithFlags,
      0x00000209 => BlockTypes::SysdigProcessInfoBlockV3,
      0x00000210 => BlockTypes::SysdigProcessInfoBlockV4,
      0x00000211 => BlockTypes::SysdigProcessInfoBlockV5,
      0x00000212 => BlockTypes::SysdigProcessInfoBlockV6,
      0x00000213 => BlockTypes::SysdigProcessInfoBlockV7,
      0x00000BAD => BlockTypes::CustomBlockRewritersCanCopy,
      0x40000BAD => BlockTypes::CustomBlockRewritersShouldNotCopy,
      0x0A0D0D0A => BlockTypes::SectionHeaderBlock,
      _ => BlockTypes::Unknown,
    }
  }
}

pub enum LinkTypes {
  Null = 0,
  Ethernet = 1,
  ExpEthernet = 2,
  Ax25 = 3,
  Pronet = 4,
  Chaos = 5,
  Ieee802_5 = 6,
  ArcnetBsd = 7,
  Slip = 8,
  Ppp = 9,
  Fddi = 10,
  PppHdlc = 50,
  PppEther = 51,
  SymantecFirewall = 99,
  AtmRfc1483 = 100,
  Raw = 101,
  CHdlc = 104,
  Ieee802_11 = 105,
  AtmClip = 106,
  Frelay = 107,
  Loop = 108,
  Enc = 109,
  NetbsdHdlc = 112,
  LinuxSll = 113,
  Ltalk = 114,
  Pflog = 117,
  Ieee802_11Prism = 119,
  IpOverFc = 122,
  Sunatm = 123,
  Ieee802_11Radiotap = 127,
  Tzsp = 128,
  ArcnetLinux = 129,
  JuniperMlppp = 130,
  JuniperMlfr = 131,
  JuniperEs = 132,
  JuniperGgsn = 133,
  JuniperMfr = 134,
  JuniperAtm2 = 135,
  JuniperServices = 136,
  JuniperAtm1 = 137,
  AppleIpOverIeee1394 = 138,
  Mtp2WithPhdr = 139,
  Mtp2 = 140,
  Mtp3 = 141,
  Sccp = 142,
  Docsis = 143,
  LinuxIrda = 144,
  IbmSp = 145,
  IbmSn = 146,
  Ieee802_11Avs = 163,
  JuniperMonitor = 164,
  BacnetMsTp = 165,
  PppPppd = 166,
  JuniperPppoe = 167,
  JuniperPppoeAtm = 168,
  GprsLlc = 169,
  GpfT = 170,
  GpfF = 171,
  GcomT1e1 = 172,
  GcomSerial = 173,
  JuniperPicPeer = 174,
  ErfEth = 175,
  ErfPos = 176,
  LinuxLapd = 177,
  JuniperEther = 178,
  JuniperPpp = 179,
  JuniperFrelay = 180,
  JuniperChdlc = 181,
  Mfr = 182,
  JuniperVp = 183,
  A429 = 184,
  A653Icm = 185,
  UsbFreebsd = 186,
  BluetoothHciH4 = 187,
  Ieee80216MacCps = 188,
  UsbLinux = 189,
  Can20b = 190,
  Ieee802154Linux = 191,
  Ppi = 192,
  Ieee80216MacCpsRadio = 193,
  JuniperIsm = 194,
  Ieee802154Withfcs = 195,
  Sita = 196,
  Erf = 197,
  Raif1 = 198,
  IpmbKontron = 199,
  JuniperSt = 200,
  BluetoothHciH4WithPhdr = 201,
  Ax25Kiss = 202,
  Lapd = 203,
  PppWithDir = 204,
  CHdlcWithDir = 205,
  FrelayWithDir = 206,
  LapbWithDir = 207,
  I2cLinux = 209,
  Flexray = 210,
  Most = 211,
  Lin = 212,
  X2eSerial = 213,
  X2eXoraya = 214,
  Ieee802154NonaskPhy = 215,
  LinuxEvdev = 216,
  GsmtapUm = 217,
  GsmtapAbis = 218,
  Mpls = 219,
  UsbLinuxMmapped = 220,
  Dect = 221,
  Aos = 222,
  Wihart = 223,
  Fc2 = 224,
  Fc2WithFrameDelims = 225,
  Ipnet = 226,
  CanSocketcan = 227,
  Ipv4 = 228,
  Ipv6 = 229,
  Ieee802154Nofcs = 230,
  Dbus = 231,
  JuniperVs = 232,
  JuniperSrxE2e = 233,
  JuniperFibrechannel = 234,
  DvbCi = 235,
  Mux27010 = 236,
  Stanag5066DPdu = 237,
  JuniperAtmCemic = 238,
  Nflog = 239,
  Netanalyzer = 240,
  NetanalyzerTransparent = 241,
  Ipoib = 242,
  Mpeg2Ts = 243,
  Ng40 = 244,
  NfcLlcp = 245,
  Pfsync = 246,
  Infiniband = 247,
  Sctp = 248,
  Usbpcap = 249,
  RtacSerial = 250,
  BluetoothLeLl = 251,
  WiresharkUpperPdu = 252,
  Netlink = 253,
  BluetoothLinuxMonitor = 254,
  BluetoothBredrBb = 255,
  BluetoothLeLlWithPhdr = 256,
  ProfibusDl = 257,
  Pktap = 258,
  Epon = 259,
  IpmiHpm2 = 260,
  ZwaveR1R2 = 261,
  ZwaveR3 = 262,
  WattstopperDlm = 263,
  Iso14443 = 264,
  Rds = 265,
  UsbDarwin = 266,
  Openflow = 267,
  Sdlc = 268,
  TiLlnSniffer = 269,
  Loratap = 270,
  Vsock = 271,
  NordicBle = 272,
  Docsis31Xra31 = 273,
  EthernetMpacket = 274,
  DisplayportAux = 275,
  LinuxSll2 = 276,
  SercosMonitor = 277,
  Openvizsla = 278,
  Ebhscr = 279,
  VppDispatch = 280,
  DsaTagBrcm = 281,
  DsaTagBrcmPrepend = 282,
  Ieee802154Tap = 283,
  DsaTagDsa = 284,
  DsaTagEdsa = 285,
  Elee = 286,
  ZWaveSerial = 287,
  Usb20 = 288,
  AtscAlp = 289,
  Etw = 290,
  NetanalyzerNg = 291,
  ZbossNcp = 292,
  Usb20LowSpeed = 293,
  Usb20FullSpeed = 294,
  Usb20HighSpeed = 295,
  AuerswaldLog = 296,
  ZwaveTap = 297,
  SilabsDebugChannel = 298,
  FiraUci = 299,
  Mdb = 300,
  DectNr = 301,
  Unknown,
}

pub fn link_type_str(link_type: &LinkTypes) -> String {
  match link_type {
    LinkTypes::Null => "Null".to_owned(),
    LinkTypes::Ethernet => "Ethernet".to_owned(),
    LinkTypes::ExpEthernet => "Exp_ethernet".to_owned(),
    LinkTypes::Ax25 => "Ax25".to_owned(),
    LinkTypes::Pronet => "Pronet".to_owned(),
    LinkTypes::Chaos => "Chaos".to_owned(),
    LinkTypes::Ieee802_5 => "Ieee802_5".to_owned(),
    LinkTypes::ArcnetBsd => "Arcnet_bsd".to_owned(),
    LinkTypes::Slip => "Slip".to_owned(),
    LinkTypes::Ppp => "Ppp".to_owned(),
    LinkTypes::Fddi => "Fddi".to_owned(),
    LinkTypes::PppHdlc => "Ppp_hdlc".to_owned(),
    LinkTypes::PppEther => "Ppp_ether".to_owned(),
    LinkTypes::SymantecFirewall => "Symantec_firewall".to_owned(),
    LinkTypes::AtmRfc1483 => "Atm_rfc1483".to_owned(),
    LinkTypes::Raw => "Raw".to_owned(),
    LinkTypes::CHdlc => "C_hdlc".to_owned(),
    LinkTypes::Ieee802_11 => "Ieee802_11".to_owned(),
    LinkTypes::AtmClip => "Atm_clip".to_owned(),
    LinkTypes::Frelay => "Frelay".to_owned(),
    LinkTypes::Loop => "Loop".to_owned(),
    LinkTypes::Enc => "Enc".to_owned(),
    LinkTypes::NetbsdHdlc => "Netbsd_hdlc".to_owned(),
    LinkTypes::LinuxSll => "Linux_sll".to_owned(),
    LinkTypes::Ltalk => "Ltalk".to_owned(),
    LinkTypes::Pflog => "Pflog".to_owned(),
    LinkTypes::Ieee802_11Prism => "Ieee802_11_prism".to_owned(),
    LinkTypes::IpOverFc => "Ip_over_fc".to_owned(),
    LinkTypes::Sunatm => "Sunatm".to_owned(),
    LinkTypes::Ieee802_11Radiotap => "Ieee802_11_radiotap".to_owned(),
    LinkTypes::Tzsp => "Tzsp".to_owned(),
    LinkTypes::ArcnetLinux => "Arcnet_linux".to_owned(),
    LinkTypes::JuniperMlppp => "Juniper_mlppp".to_owned(),
    LinkTypes::JuniperMlfr => "Juniper_mlfr".to_owned(),
    LinkTypes::JuniperEs => "Juniper_es".to_owned(),
    LinkTypes::JuniperGgsn => "Juniper_ggsn".to_owned(),
    LinkTypes::JuniperMfr => "Juniper_mfr".to_owned(),
    LinkTypes::JuniperAtm2 => "Juniper_atm2".to_owned(),
    LinkTypes::JuniperServices => "Juniper_services".to_owned(),
    LinkTypes::JuniperAtm1 => "Juniper_atm1".to_owned(),
    LinkTypes::AppleIpOverIeee1394 => "Apple_ip_over_ieee1394".to_owned(),
    LinkTypes::Mtp2WithPhdr => "Mtp2_with_phdr".to_owned(),
    LinkTypes::Mtp2 => "Mtp2".to_owned(),
    LinkTypes::Mtp3 => "Mtp3".to_owned(),
    LinkTypes::Sccp => "Sccp".to_owned(),
    LinkTypes::Docsis => "Docsis".to_owned(),
    LinkTypes::LinuxIrda => "Linux_irda".to_owned(),
    LinkTypes::IbmSp => "Ibm_sp".to_owned(),
    LinkTypes::IbmSn => "Ibm_sn".to_owned(),
    LinkTypes::Ieee802_11Avs => "Ieee802_11_avs".to_owned(),
    LinkTypes::JuniperMonitor => "Juniper_monitor".to_owned(),
    LinkTypes::BacnetMsTp => "Bacnet_ms_tp".to_owned(),
    LinkTypes::PppPppd => "Ppp_pppd".to_owned(),
    LinkTypes::JuniperPppoe => "Juniper_pppoe".to_owned(),
    LinkTypes::JuniperPppoeAtm => "Juniper_pppoe_atm".to_owned(),
    LinkTypes::GprsLlc => "Gprs_llc".to_owned(),
    LinkTypes::GpfT => "Gpf_t".to_owned(),
    LinkTypes::GpfF => "Gpf_f".to_owned(),
    LinkTypes::GcomT1e1 => "Gcom_t1e1".to_owned(),
    LinkTypes::GcomSerial => "Gcom_serial".to_owned(),
    LinkTypes::JuniperPicPeer => "Juniper_pic_peer".to_owned(),
    LinkTypes::ErfEth => "Erf_eth".to_owned(),
    LinkTypes::ErfPos => "Erf_pos".to_owned(),
    LinkTypes::LinuxLapd => "Linux_lapd".to_owned(),
    LinkTypes::JuniperEther => "Juniper_ether".to_owned(),
    LinkTypes::JuniperPpp => "Juniper_ppp".to_owned(),
    LinkTypes::JuniperFrelay => "Juniper_frelay".to_owned(),
    LinkTypes::JuniperChdlc => "Juniper_chdlc".to_owned(),
    LinkTypes::Mfr => "Mfr".to_owned(),
    LinkTypes::JuniperVp => "Juniper_vp".to_owned(),
    LinkTypes::A429 => "A429".to_owned(),
    LinkTypes::A653Icm => "A653_icm".to_owned(),
    LinkTypes::UsbFreebsd => "Usb_freebsd".to_owned(),
    LinkTypes::BluetoothHciH4 => "Bluetooth_hci_h4".to_owned(),
    LinkTypes::Ieee80216MacCps => "Ieee802_16_mac_cps".to_owned(),
    LinkTypes::UsbLinux => "Usb_linux".to_owned(),
    LinkTypes::Can20b => "Can20b".to_owned(),
    LinkTypes::Ieee802154Linux => "Ieee802_15_4_linux".to_owned(),
    LinkTypes::Ppi => "Ppi".to_owned(),
    LinkTypes::Ieee80216MacCpsRadio => "Ieee802_16_mac_cps_radio".to_owned(),
    LinkTypes::JuniperIsm => "Juniper_ism".to_owned(),
    LinkTypes::Ieee802154Withfcs => "Ieee802_15_4_withfcs".to_owned(),
    LinkTypes::Sita => "Sita".to_owned(),
    LinkTypes::Erf => "Erf".to_owned(),
    LinkTypes::Raif1 => "Raif1".to_owned(),
    LinkTypes::IpmbKontron => "Ipmb_kontron".to_owned(),
    LinkTypes::JuniperSt => "Juniper_st".to_owned(),
    LinkTypes::BluetoothHciH4WithPhdr => "Bluetooth_hci_h4_with_phdr".to_owned(),
    LinkTypes::Ax25Kiss => "Ax25_kiss".to_owned(),
    LinkTypes::Lapd => "Lapd".to_owned(),
    LinkTypes::PppWithDir => "Ppp_with_dir".to_owned(),
    LinkTypes::CHdlcWithDir => "C_hdlc_with_dir".to_owned(),
    LinkTypes::FrelayWithDir => "Frelay_with_dir".to_owned(),
    LinkTypes::LapbWithDir => "Lapb_with_dir".to_owned(),
    LinkTypes::I2cLinux => "I2c_linux".to_owned(),
    LinkTypes::Flexray => "Flexray".to_owned(),
    LinkTypes::Most => "Most".to_owned(),
    LinkTypes::Lin => "Lin".to_owned(),
    LinkTypes::X2eSerial => "X2e_serial".to_owned(),
    LinkTypes::X2eXoraya => "X2e_xoraya".to_owned(),
    LinkTypes::Ieee802154NonaskPhy => "Ieee802_15_4_nonask_phy".to_owned(),
    LinkTypes::LinuxEvdev => "Linux_evdev".to_owned(),
    LinkTypes::GsmtapUm => "Gsmtap_um".to_owned(),
    LinkTypes::GsmtapAbis => "Gsmtap_abis".to_owned(),
    LinkTypes::Mpls => "Mpls".to_owned(),
    LinkTypes::UsbLinuxMmapped => "Usb_linux_mmapped".to_owned(),
    LinkTypes::Dect => "Dect".to_owned(),
    LinkTypes::Aos => "Aos".to_owned(),
    LinkTypes::Wihart => "Wihart".to_owned(),
    LinkTypes::Fc2 => "Fc_2".to_owned(),
    LinkTypes::Fc2WithFrameDelims => "Fc_2_with_frame_delims".to_owned(),
    LinkTypes::Ipnet => "Ipnet".to_owned(),
    LinkTypes::CanSocketcan => "Can_socketcan".to_owned(),
    LinkTypes::Ipv4 => "Ipv4".to_owned(),
    LinkTypes::Ipv6 => "Ipv6".to_owned(),
    LinkTypes::Ieee802154Nofcs => "Ieee802_15_4_nofcs".to_owned(),
    LinkTypes::Dbus => "Dbus".to_owned(),
    LinkTypes::JuniperVs => "Juniper_vs".to_owned(),
    LinkTypes::JuniperSrxE2e => "Juniper_srx_e2e".to_owned(),
    LinkTypes::JuniperFibrechannel => "Juniper_fibrechannel".to_owned(),
    LinkTypes::DvbCi => "Dvb_ci".to_owned(),
    LinkTypes::Mux27010 => "Mux27010".to_owned(),
    LinkTypes::Stanag5066DPdu => "Stanag_5066_d_pdu".to_owned(),
    LinkTypes::JuniperAtmCemic => "Juniper_atm_cemic".to_owned(),
    LinkTypes::Nflog => "Nflog".to_owned(),
    LinkTypes::Netanalyzer => "Netanalyzer".to_owned(),
    LinkTypes::NetanalyzerTransparent => "Netanalyzer_transparent".to_owned(),
    LinkTypes::Ipoib => "Ipoib".to_owned(),
    LinkTypes::Mpeg2Ts => "Mpeg_2_ts".to_owned(),
    LinkTypes::Ng40 => "Ng40".to_owned(),
    LinkTypes::NfcLlcp => "Nfc_llcp".to_owned(),
    LinkTypes::Pfsync => "Pfsync".to_owned(),
    LinkTypes::Infiniband => "Infiniband".to_owned(),
    LinkTypes::Sctp => "Sctp".to_owned(),
    LinkTypes::Usbpcap => "Usbpcap".to_owned(),
    LinkTypes::RtacSerial => "Rtac_serial".to_owned(),
    LinkTypes::BluetoothLeLl => "Bluetooth_le_ll".to_owned(),
    LinkTypes::WiresharkUpperPdu => "Wireshark_upper_pdu".to_owned(),
    LinkTypes::Netlink => "Netlink".to_owned(),
    LinkTypes::BluetoothLinuxMonitor => "Bluetooth_linux_monitor".to_owned(),
    LinkTypes::BluetoothBredrBb => "Bluetooth_bredr_bb".to_owned(),
    LinkTypes::BluetoothLeLlWithPhdr => "Bluetooth_le_ll_with_phdr".to_owned(),
    LinkTypes::ProfibusDl => "Profibus_dl".to_owned(),
    LinkTypes::Pktap => "Pktap".to_owned(),
    LinkTypes::Epon => "Epon".to_owned(),
    LinkTypes::IpmiHpm2 => "Ipmi_hpm_2".to_owned(),
    LinkTypes::ZwaveR1R2 => "Zwave_r1_r2".to_owned(),
    LinkTypes::ZwaveR3 => "Zwave_r3".to_owned(),
    LinkTypes::WattstopperDlm => "Wattstopper_dlm".to_owned(),
    LinkTypes::Iso14443 => "Iso_14443".to_owned(),
    LinkTypes::Rds => "Rds".to_owned(),
    LinkTypes::UsbDarwin => "Usb_darwin".to_owned(),
    LinkTypes::Openflow => "Openflow".to_owned(),
    LinkTypes::Sdlc => "Sdlc".to_owned(),
    LinkTypes::TiLlnSniffer => "Ti_lln_sniffer".to_owned(),
    LinkTypes::Loratap => "Loratap".to_owned(),
    LinkTypes::Vsock => "Vsock".to_owned(),
    LinkTypes::NordicBle => "Nordic_ble".to_owned(),
    LinkTypes::Docsis31Xra31 => "Docsis31_xra31".to_owned(),
    LinkTypes::EthernetMpacket => "Ethernet_mpacket".to_owned(),
    LinkTypes::DisplayportAux => "Displayport_aux".to_owned(),
    LinkTypes::LinuxSll2 => "Linux_sll2".to_owned(),
    LinkTypes::SercosMonitor => "Sercos_monitor".to_owned(),
    LinkTypes::Openvizsla => "Openvizsla".to_owned(),
    LinkTypes::Ebhscr => "Ebhscr".to_owned(),
    LinkTypes::VppDispatch => "Vpp_dispatch".to_owned(),
    LinkTypes::DsaTagBrcm => "Dsa_tag_brcm".to_owned(),
    LinkTypes::DsaTagBrcmPrepend => "Dsa_tag_brcm_prepend".to_owned(),
    LinkTypes::Ieee802154Tap => "Ieee802_15_4_tap".to_owned(),
    LinkTypes::DsaTagDsa => "Dsa_tag_dsa".to_owned(),
    LinkTypes::DsaTagEdsa => "Dsa_tag_edsa".to_owned(),
    LinkTypes::Elee => "Elee".to_owned(),
    LinkTypes::ZWaveSerial => "Z_wave_serial".to_owned(),
    LinkTypes::Usb20 => "Usb_2_0".to_owned(),
    LinkTypes::AtscAlp => "Atsc_alp".to_owned(),
    LinkTypes::Etw => "Etw".to_owned(),
    LinkTypes::NetanalyzerNg => "Netanalyzer_ng".to_owned(),
    LinkTypes::ZbossNcp => "Zboss_ncp".to_owned(),
    LinkTypes::Usb20LowSpeed => "Usb_2_0_low_speed".to_owned(),
    LinkTypes::Usb20FullSpeed => "Usb_2_0_full_speed".to_owned(),
    LinkTypes::Usb20HighSpeed => "Usb_2_0_high_speed".to_owned(),
    LinkTypes::AuerswaldLog => "Auerswald_log".to_owned(),
    LinkTypes::ZwaveTap => "Zwave_tap".to_owned(),
    LinkTypes::SilabsDebugChannel => "Silabs_debug_channel".to_owned(),
    LinkTypes::FiraUci => "Fira_uci".to_owned(),
    LinkTypes::Mdb => "Mdb".to_owned(),
    LinkTypes::DectNr => "Dect_nr".to_owned(),
    LinkTypes::Unknown => "Unknown".to_owned(),
  }
}

impl From<u16> for LinkTypes {
  fn from(n: u16) -> Self {
    match n {
      0 => LinkTypes::Null,
      1 => LinkTypes::Ethernet,
      2 => LinkTypes::ExpEthernet,
      3 => LinkTypes::Ax25,
      4 => LinkTypes::Pronet,
      5 => LinkTypes::Chaos,
      6 => LinkTypes::Ieee802_5,
      7 => LinkTypes::ArcnetBsd,
      8 => LinkTypes::Slip,
      9 => LinkTypes::Ppp,
      10 => LinkTypes::Fddi,
      50 => LinkTypes::PppHdlc,
      51 => LinkTypes::PppEther,
      99 => LinkTypes::SymantecFirewall,
      100 => LinkTypes::AtmRfc1483,
      101 => LinkTypes::Raw,
      104 => LinkTypes::CHdlc,
      105 => LinkTypes::Ieee802_11,
      106 => LinkTypes::AtmClip,
      107 => LinkTypes::Frelay,
      108 => LinkTypes::Loop,
      109 => LinkTypes::Enc,
      112 => LinkTypes::NetbsdHdlc,
      113 => LinkTypes::LinuxSll,
      114 => LinkTypes::Ltalk,
      117 => LinkTypes::Pflog,
      119 => LinkTypes::Ieee802_11Prism,
      122 => LinkTypes::IpOverFc,
      123 => LinkTypes::Sunatm,
      127 => LinkTypes::Ieee802_11Radiotap,
      128 => LinkTypes::Tzsp,
      129 => LinkTypes::ArcnetLinux,
      130 => LinkTypes::JuniperMlppp,
      131 => LinkTypes::JuniperMlfr,
      132 => LinkTypes::JuniperEs,
      133 => LinkTypes::JuniperGgsn,
      134 => LinkTypes::JuniperMfr,
      135 => LinkTypes::JuniperAtm2,
      136 => LinkTypes::JuniperServices,
      137 => LinkTypes::JuniperAtm1,
      138 => LinkTypes::AppleIpOverIeee1394,
      139 => LinkTypes::Mtp2WithPhdr,
      140 => LinkTypes::Mtp2,
      141 => LinkTypes::Mtp3,
      142 => LinkTypes::Sccp,
      143 => LinkTypes::Docsis,
      144 => LinkTypes::LinuxIrda,
      145 => LinkTypes::IbmSp,
      146 => LinkTypes::IbmSn,
      163 => LinkTypes::Ieee802_11Avs,
      164 => LinkTypes::JuniperMonitor,
      165 => LinkTypes::BacnetMsTp,
      166 => LinkTypes::PppPppd,
      167 => LinkTypes::JuniperPppoe,
      168 => LinkTypes::JuniperPppoeAtm,
      169 => LinkTypes::GprsLlc,
      170 => LinkTypes::GpfT,
      171 => LinkTypes::GpfF,
      172 => LinkTypes::GcomT1e1,
      173 => LinkTypes::GcomSerial,
      174 => LinkTypes::JuniperPicPeer,
      175 => LinkTypes::ErfEth,
      176 => LinkTypes::ErfPos,
      177 => LinkTypes::LinuxLapd,
      178 => LinkTypes::JuniperEther,
      179 => LinkTypes::JuniperPpp,
      180 => LinkTypes::JuniperFrelay,
      181 => LinkTypes::JuniperChdlc,
      182 => LinkTypes::Mfr,
      183 => LinkTypes::JuniperVp,
      184 => LinkTypes::A429,
      185 => LinkTypes::A653Icm,
      186 => LinkTypes::UsbFreebsd,
      187 => LinkTypes::BluetoothHciH4,
      188 => LinkTypes::Ieee80216MacCps,
      189 => LinkTypes::UsbLinux,
      190 => LinkTypes::Can20b,
      191 => LinkTypes::Ieee802154Linux,
      192 => LinkTypes::Ppi,
      193 => LinkTypes::Ieee80216MacCpsRadio,
      194 => LinkTypes::JuniperIsm,
      195 => LinkTypes::Ieee802154Withfcs,
      196 => LinkTypes::Sita,
      197 => LinkTypes::Erf,
      198 => LinkTypes::Raif1,
      199 => LinkTypes::IpmbKontron,
      200 => LinkTypes::JuniperSt,
      201 => LinkTypes::BluetoothHciH4WithPhdr,
      202 => LinkTypes::Ax25Kiss,
      203 => LinkTypes::Lapd,
      204 => LinkTypes::PppWithDir,
      205 => LinkTypes::CHdlcWithDir,
      206 => LinkTypes::FrelayWithDir,
      207 => LinkTypes::LapbWithDir,
      209 => LinkTypes::I2cLinux,
      210 => LinkTypes::Flexray,
      211 => LinkTypes::Most,
      212 => LinkTypes::Lin,
      213 => LinkTypes::X2eSerial,
      214 => LinkTypes::X2eXoraya,
      215 => LinkTypes::Ieee802154NonaskPhy,
      216 => LinkTypes::LinuxEvdev,
      217 => LinkTypes::GsmtapUm,
      218 => LinkTypes::GsmtapAbis,
      219 => LinkTypes::Mpls,
      220 => LinkTypes::UsbLinuxMmapped,
      221 => LinkTypes::Dect,
      222 => LinkTypes::Aos,
      223 => LinkTypes::Wihart,
      224 => LinkTypes::Fc2,
      225 => LinkTypes::Fc2WithFrameDelims,
      226 => LinkTypes::Ipnet,
      227 => LinkTypes::CanSocketcan,
      228 => LinkTypes::Ipv4,
      229 => LinkTypes::Ipv6,
      230 => LinkTypes::Ieee802154Nofcs,
      231 => LinkTypes::Dbus,
      232 => LinkTypes::JuniperVs,
      233 => LinkTypes::JuniperSrxE2e,
      234 => LinkTypes::JuniperFibrechannel,
      235 => LinkTypes::DvbCi,
      236 => LinkTypes::Mux27010,
      237 => LinkTypes::Stanag5066DPdu,
      238 => LinkTypes::JuniperAtmCemic,
      239 => LinkTypes::Nflog,
      240 => LinkTypes::Netanalyzer,
      241 => LinkTypes::NetanalyzerTransparent,
      242 => LinkTypes::Ipoib,
      243 => LinkTypes::Mpeg2Ts,
      244 => LinkTypes::Ng40,
      245 => LinkTypes::NfcLlcp,
      246 => LinkTypes::Pfsync,
      247 => LinkTypes::Infiniband,
      248 => LinkTypes::Sctp,
      249 => LinkTypes::Usbpcap,
      250 => LinkTypes::RtacSerial,
      251 => LinkTypes::BluetoothLeLl,
      252 => LinkTypes::WiresharkUpperPdu,
      253 => LinkTypes::Netlink,
      254 => LinkTypes::BluetoothLinuxMonitor,
      255 => LinkTypes::BluetoothBredrBb,
      256 => LinkTypes::BluetoothLeLlWithPhdr,
      257 => LinkTypes::ProfibusDl,
      258 => LinkTypes::Pktap,
      259 => LinkTypes::Epon,
      260 => LinkTypes::IpmiHpm2,
      261 => LinkTypes::ZwaveR1R2,
      262 => LinkTypes::ZwaveR3,
      263 => LinkTypes::WattstopperDlm,
      264 => LinkTypes::Iso14443,
      265 => LinkTypes::Rds,
      266 => LinkTypes::UsbDarwin,
      267 => LinkTypes::Openflow,
      268 => LinkTypes::Sdlc,
      269 => LinkTypes::TiLlnSniffer,
      270 => LinkTypes::Loratap,
      271 => LinkTypes::Vsock,
      272 => LinkTypes::NordicBle,
      273 => LinkTypes::Docsis31Xra31,
      274 => LinkTypes::EthernetMpacket,
      275 => LinkTypes::DisplayportAux,
      276 => LinkTypes::LinuxSll2,
      277 => LinkTypes::SercosMonitor,
      278 => LinkTypes::Openvizsla,
      279 => LinkTypes::Ebhscr,
      280 => LinkTypes::VppDispatch,
      281 => LinkTypes::DsaTagBrcm,
      282 => LinkTypes::DsaTagBrcmPrepend,
      283 => LinkTypes::Ieee802154Tap,
      284 => LinkTypes::DsaTagDsa,
      285 => LinkTypes::DsaTagEdsa,
      286 => LinkTypes::Elee,
      287 => LinkTypes::ZWaveSerial,
      288 => LinkTypes::Usb20,
      289 => LinkTypes::AtscAlp,
      290 => LinkTypes::Etw,
      291 => LinkTypes::NetanalyzerNg,
      292 => LinkTypes::ZbossNcp,
      293 => LinkTypes::Usb20LowSpeed,
      294 => LinkTypes::Usb20FullSpeed,
      295 => LinkTypes::Usb20HighSpeed,
      296 => LinkTypes::AuerswaldLog,
      297 => LinkTypes::ZwaveTap,
      298 => LinkTypes::SilabsDebugChannel,
      299 => LinkTypes::FiraUci,
      300 => LinkTypes::Mdb,
      301 => LinkTypes::DectNr,
      _ => LinkTypes::Unknown,
    }
  }
}
